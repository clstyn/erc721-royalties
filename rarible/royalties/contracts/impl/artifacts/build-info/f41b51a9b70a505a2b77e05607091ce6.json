{
	"id": "f41b51a9b70a505a2b77e05607091ce6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"raribles/royalties/contracts/impl/RoyaltiesV2Impl.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./AbstractRoyalties.sol\";\r\nimport \"../RoyaltiesV2.sol\";\r\n\r\ncontract RoyaltiesV2Impl is AbstractRoyalties, RoyaltiesV2 {\r\n\r\n    function getRaribleV2Royalties(uint256 id) override external view returns (LibPart.Part[] memory) {\r\n        return royalties[id];\r\n    }\r\n\r\n    function _onRoyaltiesSet(uint256 id, LibPart.Part[] memory _royalties) override internal {\r\n        emit RoyaltiesSet(id, _royalties);\r\n    }\r\n}"
			},
			"raribles/royalties/contracts/RoyaltiesV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\nimport \"./LibPart.sol\";\r\n\r\ninterface RoyaltiesV2 {\r\n    event RoyaltiesSet(uint256 tokenId, LibPart.Part[] royalties);\r\n\r\n    function getRaribleV2Royalties(uint256 id) external view returns (LibPart.Part[] memory);\r\n}"
			},
			"raribles/royalties/contracts/impl/AbstractRoyalties.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../LibPart.sol\";\r\n\r\nabstract contract AbstractRoyalties {\r\n    mapping (uint256 => LibPart.Part[]) internal royalties;\r\n\r\n    function _saveRoyalties(uint256 id, LibPart.Part[] memory _royalties) internal {\r\n        uint256 totalValue;\r\n        for (uint i = 0; i < _royalties.length; i++) {\r\n            require(_royalties[i].account != address(0x0), \"Recipient should be present\");\r\n            require(_royalties[i].value != 0, \"Royalty value should be positive\");\r\n            totalValue += _royalties[i].value;\r\n            royalties[id].push(_royalties[i]);\r\n        }\r\n        require(totalValue < 10000, \"Royalty total value should be < 10000\");\r\n        _onRoyaltiesSet(id, _royalties);\r\n    }\r\n\r\n    function _updateAccount(uint256 _id, address _from, address _to) internal {\r\n        uint length = royalties[_id].length;\r\n        for(uint i = 0; i < length; i++) {\r\n            if (royalties[_id][i].account == _from) {\r\n                royalties[_id][i].account = payable(address(uint160(_to)));\r\n            }\r\n        }\r\n    }\r\n\r\n    function _onRoyaltiesSet(uint256 id, LibPart.Part[] memory _royalties) virtual internal;\r\n}"
			},
			"raribles/royalties/contracts/LibPart.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nlibrary LibPart {\r\n    bytes32 public constant TYPE_HASH = keccak256(\"Part(address account,uint96 value)\");\r\n\r\n    struct Part {\r\n        address payable account;\r\n        uint96 value;\r\n    }\r\n\r\n    function hash(Part memory part) internal pure returns (bytes32) {\r\n        return keccak256(abi.encode(TYPE_HASH, part.account, part.value));\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"raribles/royalties/contracts/LibPart.sol": {
				"LibPart": {
					"abi": [
						{
							"inputs": [],
							"name": "TYPE_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"raribles/royalties/contracts/LibPart.sol\":62:413  library LibPart {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"raribles/royalties/contracts/LibPart.sol\":62:413  library LibPart {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x64d4c819\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"raribles/royalties/contracts/LibPart.sol\":85:168  bytes32 public constant TYPE_HASH = keccak256(\"Part(address account,uint96 value)\") */\n    tag_2:\n      tag_3\n      tag_4\n      jump\t// in\n    tag_3:\n      mload(0x40)\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_4:\n        /* \"raribles/royalties/contracts/LibPart.sol\":121:168  keccak256(\"Part(address account,uint96 value)\") */\n      0x397e04204c1e1a60ee8724b71f8244e10ab5f2e9009854d80f602bda21b59ebb\n        /* \"raribles/royalties/contracts/LibPart.sol\":85:168  bytes32 public constant TYPE_HASH = keccak256(\"Part(address account,uint96 value)\") */\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_8:\n        /* \"#utility.yul\":102:126   */\n      tag_10\n        /* \"#utility.yul\":120:125   */\n      dup2\n        /* \"#utility.yul\":102:126   */\n      tag_11\n      jump\t// in\n    tag_10:\n        /* \"#utility.yul\":97:100   */\n      dup3\n        /* \"#utility.yul\":90:127   */\n      mstore\n        /* \"#utility.yul\":7:133   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:377   */\n    tag_6:\n        /* \"#utility.yul\":240:244   */\n      0x00\n        /* \"#utility.yul\":278:280   */\n      0x20\n        /* \"#utility.yul\":267:276   */\n      dup3\n        /* \"#utility.yul\":263:281   */\n      add\n        /* \"#utility.yul\":255:281   */\n      swap1\n      pop\n        /* \"#utility.yul\":291:370   */\n      tag_13\n        /* \"#utility.yul\":367:368   */\n      0x00\n        /* \"#utility.yul\":356:365   */\n      dup4\n        /* \"#utility.yul\":352:369   */\n      add\n        /* \"#utility.yul\":343:349   */\n      dup5\n        /* \"#utility.yul\":291:370   */\n      tag_8\n      jump\t// in\n    tag_13:\n        /* \"#utility.yul\":139:377   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:460   */\n    tag_11:\n        /* \"#utility.yul\":420:427   */\n      0x00\n        /* \"#utility.yul\":449:454   */\n      dup2\n        /* \"#utility.yul\":438:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201adb18584bca75982dce18dc93b36db972f02055b73140f01b546bd20800a7f164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60dc610052600b82828239805160001a607314610045577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c806364d4c819146038575b600080fd5b603e6052565b604051604991906083565b60405180910390f35b7f397e04204c1e1a60ee8724b71f8244e10ab5f2e9009854d80f602bda21b59ebb81565b607d81609c565b82525050565b6000602082019050609660008301846076565b92915050565b600081905091905056fea26469706673582212201adb18584bca75982dce18dc93b36db972f02055b73140f01b546bd20800a7f164736f6c63430008070033",
							"opcodes": "PUSH1 0xDC PUSH2 0x52 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x45 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64D4C819 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3E PUSH1 0x52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x49 SWAP2 SWAP1 PUSH1 0x83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x397E04204C1E1A60EE8724B71F8244E10AB5F2E9009854D80F602BDA21B59EBB DUP2 JUMP JUMPDEST PUSH1 0x7D DUP2 PUSH1 0x9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x96 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xDB XOR PC 0x4B 0xCA PUSH22 0x982DCE18DC93B36DB972F02055B73140F01B546BD208 STOP 0xA7 CALL PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "62:351:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TYPE_HASH_6": {
									"entryPoint": 82,
									"id": 6,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack_library": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:463:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "80:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "97:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "120:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "102:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "102:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "90:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "90:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "90:37:4"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "68:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "75:3:4",
														"type": ""
													}
												],
												"src": "7:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "245:132:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "255:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "267:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "255:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "343:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "356:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "367:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "352:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "352:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "291:51:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "291:79:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "291:79:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "217:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "229:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "240:4:4",
														"type": ""
													}
												],
												"src": "139:238:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "428:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "438:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "449:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "438:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "410:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "420:7:4",
														"type": ""
													}
												],
												"src": "383:77:4"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040526004361060335760003560e01c806364d4c819146038575b600080fd5b603e6052565b604051604991906083565b60405180910390f35b7f397e04204c1e1a60ee8724b71f8244e10ab5f2e9009854d80f602bda21b59ebb81565b607d81609c565b82525050565b6000602082019050609660008301846076565b92915050565b600081905091905056fea26469706673582212201adb18584bca75982dce18dc93b36db972f02055b73140f01b546bd20800a7f164736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64D4C819 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3E PUSH1 0x52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x49 SWAP2 SWAP1 PUSH1 0x83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x397E04204C1E1A60EE8724B71F8244E10AB5F2E9009854D80F602BDA21B59EBB DUP2 JUMP JUMPDEST PUSH1 0x7D DUP2 PUSH1 0x9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x96 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xDB XOR PC 0x4B 0xCA PUSH22 0x982DCE18DC93B36DB972F02055B73140F01B546BD208 STOP 0xA7 CALL PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "62:351:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;85:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;121:47;85:83;:::o;7:126:4:-;102:24;120:5;102:24;:::i;:::-;97:3;90:37;7:126;;:::o;139:238::-;240:4;278:2;267:9;263:18;255:26;;291:79;367:1;356:9;352:17;343:6;291:79;:::i;:::-;139:238;;;;:::o;383:77::-;420:7;449:5;438:16;;383:77;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "44000",
								"executionCost": "121",
								"totalCost": "44121"
							},
							"external": {
								"TYPE_HASH()": "291"
							},
							"internal": {
								"hash(struct LibPart.Part memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 413,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 413,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 62,
									"end": 413,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 62,
									"end": 413,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 62,
									"end": 413,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 62,
									"end": 413,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 62,
									"end": 413,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 413,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 62,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 413,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 62,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 413,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 62,
									"end": 413,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 413,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 62,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 413,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 62,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 62,
									"end": 413,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 62,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 62,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 413,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 62,
									"end": 413,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 413,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 62,
									"end": 413,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 62,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 413,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 62,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 413,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 62,
									"end": 413,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 62,
									"end": 413,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 62,
									"end": 413,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 62,
									"end": 413,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201adb18584bca75982dce18dc93b36db972f02055b73140f01b546bd20800a7f164736f6c63430008070033",
									".code": [
										{
											"begin": 62,
											"end": 413,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 62,
											"end": 413,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 62,
											"end": 413,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 413,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 413,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 413,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 413,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 413,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 62,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 413,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 413,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 62,
											"end": 413,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 62,
											"end": 413,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 62,
											"end": 413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 413,
											"name": "PUSH",
											"source": 0,
											"value": "64D4C819"
										},
										{
											"begin": 62,
											"end": 413,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62,
											"end": 413,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 413,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62,
											"end": 413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 413,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 85,
											"end": 168,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 85,
											"end": 168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 85,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 85,
											"end": 168,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 85,
											"end": 168,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 85,
											"end": 168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 85,
											"end": 168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 85,
											"end": 168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 85,
											"end": 168,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 85,
											"end": 168,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 85,
											"end": 168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 85,
											"end": 168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 168,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 85,
											"end": 168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 168,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 85,
											"end": 168,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 85,
											"end": 168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 121,
											"end": 168,
											"name": "PUSH",
											"source": 0,
											"value": "397E04204C1E1A60EE8724B71F8244E10AB5F2E9009854D80F602BDA21B59EBB"
										},
										{
											"begin": 85,
											"end": 168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 168,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 102,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 120,
											"end": 125,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 102,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 102,
											"end": 126,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 102,
											"end": 126,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 102,
											"end": 126,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 97,
											"end": 100,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 90,
											"end": 127,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 139,
											"end": 377,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 139,
											"end": 377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 240,
											"end": 244,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 280,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 267,
											"end": 276,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 263,
											"end": 281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 255,
											"end": 281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 255,
											"end": 281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 291,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 367,
											"end": 368,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 365,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 352,
											"end": 369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 343,
											"end": 349,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 291,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 291,
											"end": 370,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 291,
											"end": 370,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 291,
											"end": 370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 139,
											"end": 377,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 139,
											"end": 377,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 139,
											"end": 377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 377,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 383,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 420,
											"end": 427,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 454,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 438,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 438,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 383,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 383,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 383,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 383,
											"end": 460,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"TYPE_HASH()": "64d4c819"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"raribles/royalties/contracts/LibPart.sol\":\"LibPart\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"raribles/royalties/contracts/LibPart.sol\":{\"keccak256\":\"0xdfa649df056dcb60a976964e1f4f8066894c804762554c03bd06536f9d412be1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e83187922289282aa565bc20d7be9e7614cc15c41848fe45704916f84e449e53\",\"dweb:/ipfs/QmPBGfCBGJFPSUeQBCSY4FJaE6DFXCQNVXEbLmcuXDvJwQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"raribles/royalties/contracts/RoyaltiesV2.sol": {
				"RoyaltiesV2": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "address payable",
											"name": "account",
											"type": "address"
										},
										{
											"internalType": "uint96",
											"name": "value",
											"type": "uint96"
										}
									],
									"indexed": false,
									"internalType": "struct LibPart.Part[]",
									"name": "royalties",
									"type": "tuple[]"
								}
							],
							"name": "RoyaltiesSet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "getRaribleV2Royalties",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address payable",
											"name": "account",
											"type": "address"
										},
										{
											"internalType": "uint96",
											"name": "value",
											"type": "uint96"
										}
									],
									"internalType": "struct LibPart.Part[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRaribleV2Royalties(uint256)": "cad96cca"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"value\",\"type\":\"uint96\"}],\"indexed\":false,\"internalType\":\"struct LibPart.Part[]\",\"name\":\"royalties\",\"type\":\"tuple[]\"}],\"name\":\"RoyaltiesSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getRaribleV2Royalties\",\"outputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"value\",\"type\":\"uint96\"}],\"internalType\":\"struct LibPart.Part[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"raribles/royalties/contracts/RoyaltiesV2.sol\":\"RoyaltiesV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"raribles/royalties/contracts/LibPart.sol\":{\"keccak256\":\"0xdfa649df056dcb60a976964e1f4f8066894c804762554c03bd06536f9d412be1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e83187922289282aa565bc20d7be9e7614cc15c41848fe45704916f84e449e53\",\"dweb:/ipfs/QmPBGfCBGJFPSUeQBCSY4FJaE6DFXCQNVXEbLmcuXDvJwQ\"]},\"raribles/royalties/contracts/RoyaltiesV2.sol\":{\"keccak256\":\"0xd284dc69f1894552bbc220691054c7d7d867062b54a62404821c9150354fea14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74ee84bdfa6a37c384626fd2d05ab0bfa359eca7c5b1f18287ec016544cad456\",\"dweb:/ipfs/QmQJzSor68pLzEBPQuJdLvC5CZPekxejvHWcY4pioKtwjH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"raribles/royalties/contracts/impl/AbstractRoyalties.sol": {
				"AbstractRoyalties": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"raribles/royalties/contracts/impl/AbstractRoyalties.sol\":\"AbstractRoyalties\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"raribles/royalties/contracts/LibPart.sol\":{\"keccak256\":\"0xdfa649df056dcb60a976964e1f4f8066894c804762554c03bd06536f9d412be1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e83187922289282aa565bc20d7be9e7614cc15c41848fe45704916f84e449e53\",\"dweb:/ipfs/QmPBGfCBGJFPSUeQBCSY4FJaE6DFXCQNVXEbLmcuXDvJwQ\"]},\"raribles/royalties/contracts/impl/AbstractRoyalties.sol\":{\"keccak256\":\"0x51eed74baa5ecd7e7b65ea6bc229053846fd95c32edb14c721618212dad56a71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d542310f3d474f1b35bb74765f127f3958534c22dc062cd29571daa357c35a7\",\"dweb:/ipfs/QmWDG68nLBraapQZMABQMvwvL8rQ8xDmfDgKUX4gXaRuAZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 62,
								"contract": "raribles/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties",
								"label": "royalties",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_array(t_struct(Part)11_storage)dyn_storage)"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Part)11_storage)dyn_storage": {
								"base": "t_struct(Part)11_storage",
								"encoding": "dynamic_array",
								"label": "struct LibPart.Part[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_uint256,t_array(t_struct(Part)11_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct LibPart.Part[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Part)11_storage)dyn_storage"
							},
							"t_struct(Part)11_storage": {
								"encoding": "inplace",
								"label": "struct LibPart.Part",
								"members": [
									{
										"astId": 8,
										"contract": "raribles/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties",
										"label": "account",
										"offset": 0,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 10,
										"contract": "raribles/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties",
										"label": "value",
										"offset": 20,
										"slot": "0",
										"type": "t_uint96"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"raribles/royalties/contracts/impl/RoyaltiesV2Impl.sol": {
				"RoyaltiesV2Impl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "address payable",
											"name": "account",
											"type": "address"
										},
										{
											"internalType": "uint96",
											"name": "value",
											"type": "uint96"
										}
									],
									"indexed": false,
									"internalType": "struct LibPart.Part[]",
									"name": "royalties",
									"type": "tuple[]"
								}
							],
							"name": "RoyaltiesSet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "getRaribleV2Royalties",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address payable",
											"name": "account",
											"type": "address"
										},
										{
											"internalType": "uint96",
											"name": "value",
											"type": "uint96"
										}
									],
									"internalType": "struct LibPart.Part[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"raribles/royalties/contracts/impl/RoyaltiesV2Impl.sol\":129:486  contract RoyaltiesV2Impl is AbstractRoyalties, RoyaltiesV2 {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"raribles/royalties/contracts/impl/RoyaltiesV2Impl.sol\":129:486  contract RoyaltiesV2Impl is AbstractRoyalties, RoyaltiesV2 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xcad96cca\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"raribles/royalties/contracts/impl/RoyaltiesV2Impl.sol\":197:334  function getRaribleV2Royalties(uint256 id) override external view returns (LibPart.Part[] memory) {\r... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"raribles/royalties/contracts/impl/RoyaltiesV2Impl.sol\":272:293  LibPart.Part[] memory */\n      0x60\n        /* \"raribles/royalties/contracts/impl/RoyaltiesV2Impl.sol\":313:322  royalties */\n      0x00\n        /* \"raribles/royalties/contracts/impl/RoyaltiesV2Impl.sol\":313:326  royalties[id] */\n      dup1\n        /* \"raribles/royalties/contracts/impl/RoyaltiesV2Impl.sol\":323:325  id */\n      dup4\n        /* \"raribles/royalties/contracts/impl/RoyaltiesV2Impl.sol\":313:326  royalties[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"raribles/royalties/contracts/impl/RoyaltiesV2Impl.sol\":306:326  return royalties[id] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_11:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_12\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_11)\n    tag_12:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"raribles/royalties/contracts/impl/RoyaltiesV2Impl.sol\":197:334  function getRaribleV2Royalties(uint256 id) override external view returns (LibPart.Part[] memory) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_15:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_17\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_6:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_20\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":228:347   */\n    tag_20:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_23\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_15\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:746   */\n    tag_24:\n        /* \"#utility.yul\":596:606   */\n      0x00\n        /* \"#utility.yul\":617:703   */\n      tag_26\n        /* \"#utility.yul\":699:702   */\n      dup4\n        /* \"#utility.yul\":691:697   */\n      dup4\n        /* \"#utility.yul\":617:703   */\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":735:739   */\n      0x40\n        /* \"#utility.yul\":730:733   */\n      dup4\n        /* \"#utility.yul\":726:740   */\n      add\n        /* \"#utility.yul\":712:740   */\n      swap1\n      pop\n        /* \"#utility.yul\":487:746   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":752:884   */\n    tag_28:\n        /* \"#utility.yul\":845:877   */\n      tag_30\n        /* \"#utility.yul\":871:876   */\n      dup2\n        /* \"#utility.yul\":845:877   */\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":840:843   */\n      dup3\n        /* \"#utility.yul\":833:878   */\n      mstore\n        /* \"#utility.yul\":752:884   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":944:1836   */\n    tag_32:\n        /* \"#utility.yul\":1103:1106   */\n      0x00\n        /* \"#utility.yul\":1132:1206   */\n      tag_34\n        /* \"#utility.yul\":1200:1205   */\n      dup3\n        /* \"#utility.yul\":1132:1206   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":1222:1328   */\n      tag_36\n        /* \"#utility.yul\":1321:1327   */\n      dup2\n        /* \"#utility.yul\":1316:1319   */\n      dup6\n        /* \"#utility.yul\":1222:1328   */\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":1215:1328   */\n      swap4\n      pop\n        /* \"#utility.yul\":1352:1428   */\n      tag_38\n        /* \"#utility.yul\":1422:1427   */\n      dup4\n        /* \"#utility.yul\":1352:1428   */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1451:1458   */\n      dup1\n        /* \"#utility.yul\":1482:1483   */\n      0x00\n        /* \"#utility.yul\":1467:1811   */\n    tag_40:\n        /* \"#utility.yul\":1492:1498   */\n      dup4\n        /* \"#utility.yul\":1489:1490   */\n      dup2\n        /* \"#utility.yul\":1486:1499   */\n      lt\n        /* \"#utility.yul\":1467:1811   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":1568:1574   */\n      dup2\n        /* \"#utility.yul\":1562:1575   */\n      mload\n        /* \"#utility.yul\":1595:1698   */\n      tag_43\n        /* \"#utility.yul\":1694:1697   */\n      dup9\n        /* \"#utility.yul\":1679:1692   */\n      dup3\n        /* \"#utility.yul\":1595:1698   */\n      tag_24\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1588:1698   */\n      swap8\n      pop\n        /* \"#utility.yul\":1721:1801   */\n      tag_44\n        /* \"#utility.yul\":1794:1800   */\n      dup4\n        /* \"#utility.yul\":1721:1801   */\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1711:1801   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1811   */\n      pop\n        /* \"#utility.yul\":1514:1515   */\n      0x01\n        /* \"#utility.yul\":1511:1512   */\n      dup2\n        /* \"#utility.yul\":1507:1516   */\n      add\n        /* \"#utility.yul\":1502:1516   */\n      swap1\n      pop\n        /* \"#utility.yul\":1467:1811   */\n      jump(tag_40)\n    tag_42:\n        /* \"#utility.yul\":1471:1485   */\n      pop\n        /* \"#utility.yul\":1827:1830   */\n      dup6\n        /* \"#utility.yul\":1820:1830   */\n      swap4\n      pop\n        /* \"#utility.yul\":1108:1836   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":944:1836   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1892:2397   */\n    tag_27:\n        /* \"#utility.yul\":2019:2023   */\n      0x40\n        /* \"#utility.yul\":2014:2017   */\n      dup3\n        /* \"#utility.yul\":2010:2024   */\n      add\n        /* \"#utility.yul\":2109:2113   */\n      0x00\n        /* \"#utility.yul\":2102:2107   */\n      dup3\n        /* \"#utility.yul\":2098:2114   */\n      add\n        /* \"#utility.yul\":2092:2115   */\n      mload\n        /* \"#utility.yul\":2128:2207   */\n      tag_47\n        /* \"#utility.yul\":2201:2205   */\n      0x00\n        /* \"#utility.yul\":2196:2199   */\n      dup6\n        /* \"#utility.yul\":2192:2206   */\n      add\n        /* \"#utility.yul\":2178:2190   */\n      dup3\n        /* \"#utility.yul\":2128:2207   */\n      tag_28\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":2034:2217   */\n      pop\n        /* \"#utility.yul\":2300:2304   */\n      0x20\n        /* \"#utility.yul\":2293:2298   */\n      dup3\n        /* \"#utility.yul\":2289:2305   */\n      add\n        /* \"#utility.yul\":2283:2306   */\n      mload\n        /* \"#utility.yul\":2319:2380   */\n      tag_48\n        /* \"#utility.yul\":2374:2378   */\n      0x20\n        /* \"#utility.yul\":2369:2372   */\n      dup6\n        /* \"#utility.yul\":2365:2379   */\n      add\n        /* \"#utility.yul\":2351:2363   */\n      dup3\n        /* \"#utility.yul\":2319:2380   */\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":2227:2390   */\n      pop\n        /* \"#utility.yul\":1988:2397   */\n      pop\n        /* \"#utility.yul\":1892:2397   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2403:2508   */\n    tag_49:\n        /* \"#utility.yul\":2478:2501   */\n      tag_51\n        /* \"#utility.yul\":2495:2500   */\n      dup2\n        /* \"#utility.yul\":2478:2501   */\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":2473:2476   */\n      dup3\n        /* \"#utility.yul\":2466:2502   */\n      mstore\n        /* \"#utility.yul\":2403:2508   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2514:2967   */\n    tag_9:\n        /* \"#utility.yul\":2697:2701   */\n      0x00\n        /* \"#utility.yul\":2735:2737   */\n      0x20\n        /* \"#utility.yul\":2724:2733   */\n      dup3\n        /* \"#utility.yul\":2720:2738   */\n      add\n        /* \"#utility.yul\":2712:2738   */\n      swap1\n      pop\n        /* \"#utility.yul\":2784:2793   */\n      dup2\n        /* \"#utility.yul\":2778:2782   */\n      dup2\n        /* \"#utility.yul\":2774:2794   */\n      sub\n        /* \"#utility.yul\":2770:2771   */\n      0x00\n        /* \"#utility.yul\":2759:2768   */\n      dup4\n        /* \"#utility.yul\":2755:2772   */\n      add\n        /* \"#utility.yul\":2748:2795   */\n      mstore\n        /* \"#utility.yul\":2812:2960   */\n      tag_54\n        /* \"#utility.yul\":2955:2959   */\n      dup2\n        /* \"#utility.yul\":2946:2952   */\n      dup5\n        /* \"#utility.yul\":2812:2960   */\n      tag_32\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":2804:2960   */\n      swap1\n      pop\n        /* \"#utility.yul\":2514:2967   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3054:3206   */\n    tag_39:\n        /* \"#utility.yul\":3141:3145   */\n      0x00\n        /* \"#utility.yul\":3164:3167   */\n      dup2\n        /* \"#utility.yul\":3156:3167   */\n      swap1\n      pop\n        /* \"#utility.yul\":3194:3198   */\n      0x20\n        /* \"#utility.yul\":3189:3192   */\n      dup3\n        /* \"#utility.yul\":3185:3199   */\n      add\n        /* \"#utility.yul\":3177:3199   */\n      swap1\n      pop\n        /* \"#utility.yul\":3054:3206   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3212:3346   */\n    tag_35:\n        /* \"#utility.yul\":3299:3305   */\n      0x00\n        /* \"#utility.yul\":3333:3338   */\n      dup2\n        /* \"#utility.yul\":3327:3339   */\n      mload\n        /* \"#utility.yul\":3317:3339   */\n      swap1\n      pop\n        /* \"#utility.yul\":3212:3346   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3352:3485   */\n    tag_45:\n        /* \"#utility.yul\":3442:3446   */\n      0x00\n        /* \"#utility.yul\":3474:3478   */\n      0x20\n        /* \"#utility.yul\":3469:3472   */\n      dup3\n        /* \"#utility.yul\":3465:3479   */\n      add\n        /* \"#utility.yul\":3457:3479   */\n      swap1\n      pop\n        /* \"#utility.yul\":3352:3485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3491:3695   */\n    tag_37:\n        /* \"#utility.yul\":3610:3621   */\n      0x00\n        /* \"#utility.yul\":3644:3650   */\n      dup3\n        /* \"#utility.yul\":3639:3642   */\n      dup3\n        /* \"#utility.yul\":3632:3651   */\n      mstore\n        /* \"#utility.yul\":3684:3688   */\n      0x20\n        /* \"#utility.yul\":3679:3682   */\n      dup3\n        /* \"#utility.yul\":3675:3689   */\n      add\n        /* \"#utility.yul\":3660:3689   */\n      swap1\n      pop\n        /* \"#utility.yul\":3491:3695   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3701:3805   */\n    tag_31:\n        /* \"#utility.yul\":3746:3753   */\n      0x00\n        /* \"#utility.yul\":3775:3799   */\n      tag_62\n        /* \"#utility.yul\":3793:3798   */\n      dup3\n        /* \"#utility.yul\":3775:3799   */\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":3764:3799   */\n      swap1\n      pop\n        /* \"#utility.yul\":3701:3805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3811:3937   */\n    tag_63:\n        /* \"#utility.yul\":3848:3855   */\n      0x00\n        /* \"#utility.yul\":3888:3930   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3881:3886   */\n      dup3\n        /* \"#utility.yul\":3877:3931   */\n      and\n        /* \"#utility.yul\":3866:3931   */\n      swap1\n      pop\n        /* \"#utility.yul\":3811:3937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3943:4020   */\n    tag_65:\n        /* \"#utility.yul\":3980:3987   */\n      0x00\n        /* \"#utility.yul\":4009:4014   */\n      dup2\n        /* \"#utility.yul\":3998:4014   */\n      swap1\n      pop\n        /* \"#utility.yul\":3943:4020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4135   */\n    tag_52:\n        /* \"#utility.yul\":4062:4069   */\n      0x00\n        /* \"#utility.yul\":4102:4128   */\n      0xffffffffffffffffffffffff\n        /* \"#utility.yul\":4095:4100   */\n      dup3\n        /* \"#utility.yul\":4091:4129   */\n      and\n        /* \"#utility.yul\":4080:4129   */\n      swap1\n      pop\n        /* \"#utility.yul\":4026:4135   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4264:4381   */\n    tag_22:\n        /* \"#utility.yul\":4373:4374   */\n      0x00\n        /* \"#utility.yul\":4370:4371   */\n      dup1\n        /* \"#utility.yul\":4363:4375   */\n      revert\n        /* \"#utility.yul\":4387:4509   */\n    tag_18:\n        /* \"#utility.yul\":4460:4484   */\n      tag_72\n        /* \"#utility.yul\":4478:4483   */\n      dup2\n        /* \"#utility.yul\":4460:4484   */\n      tag_65\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":4453:4458   */\n      dup2\n        /* \"#utility.yul\":4450:4485   */\n      eq\n        /* \"#utility.yul\":4440:4503   */\n      tag_73\n      jumpi\n        /* \"#utility.yul\":4499:4500   */\n      0x00\n        /* \"#utility.yul\":4496:4497   */\n      dup1\n        /* \"#utility.yul\":4489:4501   */\n      revert\n        /* \"#utility.yul\":4440:4503   */\n    tag_73:\n        /* \"#utility.yul\":4387:4509   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122085fc0160b192c8445494f80490ace44faa7de9f4e834405eed7a229fb912d04664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610367806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cad96cca14610030575b600080fd5b61004a60048036038101906100459190610176565b610060565b6040516100579190610266565b60405180910390f35b6060600080838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610156578382906000526020600020016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff168152505081526020019060010190610094565b505050509050919050565b6000813590506101708161031a565b92915050565b60006020828403121561018c5761018b610315565b5b600061019a84828501610161565b91505092915050565b60006101af8383610228565b60408301905092915050565b6101c4816102c1565b82525050565b60006101d582610298565b6101df81856102b0565b93506101ea83610288565b8060005b8381101561021b57815161020288826101a3565b975061020d836102a3565b9250506001810190506101ee565b5085935050505092915050565b60408201600082015161023e60008501826101bb565b5060208201516102516020850182610257565b50505050565b610260816102fd565b82525050565b6000602082019050818103600083015261028081846101ca565b905092915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b60006102cc826102d3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006bffffffffffffffffffffffff82169050919050565b600080fd5b610323816102f3565b811461032e57600080fd5b5056fea264697066735822122085fc0160b192c8445494f80490ace44faa7de9f4e834405eed7a229fb912d04664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCAD96CCA EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x176 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x156 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x94 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x170 DUP2 PUSH2 0x31A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C JUMPI PUSH2 0x18B PUSH2 0x315 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A DUP5 DUP3 DUP6 ADD PUSH2 0x161 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF DUP4 DUP4 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C4 DUP2 PUSH2 0x2C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5 DUP3 PUSH2 0x298 JUMP JUMPDEST PUSH2 0x1DF DUP2 DUP6 PUSH2 0x2B0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EA DUP4 PUSH2 0x288 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21B JUMPI DUP2 MLOAD PUSH2 0x202 DUP9 DUP3 PUSH2 0x1A3 JUMP JUMPDEST SWAP8 POP PUSH2 0x20D DUP4 PUSH2 0x2A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1EE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x23E PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1BB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x251 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x257 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x260 DUP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x280 DUP2 DUP5 PUSH2 0x1CA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC DUP3 PUSH2 0x2D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x323 DUP2 PUSH2 0x2F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xFC ADD PUSH1 0xB1 SWAP3 0xC8 DIFFICULTY SLOAD SWAP5 0xF8 DIV SWAP1 0xAC 0xE4 0x4F 0xAA PUSH30 0xE9F4E834405EED7A229FB912D04664736F6C634300080700330000000000 ",
							"sourceMap": "129:357:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getRaribleV2Royalties_229": {
									"entryPoint": 96,
									"id": 229,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_Part_$11_memory_ptr_to_t_struct$_Part_$11_memory_ptr": {
									"entryPoint": 419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Part_$11_memory_ptr_to_t_struct$_Part_$11_memory_ptr": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint96_to_t_uint96": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint96": {
									"entryPoint": 765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4512:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:4"
															},
															"nodeType": "YulIf",
															"src": "228:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:4",
														"type": ""
													}
												],
												"src": "152:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "607:139:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "691:6:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "699:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Part_$11_memory_ptr_to_t_struct$_Part_$11_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "617:73:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:86:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:86:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "712:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:4:4",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "726:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:14:4"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "712:10:4"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Part_$11_memory_ptr_to_t_struct$_Part_$11_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "580:6:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "588:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "596:10:4",
														"type": ""
													}
												],
												"src": "487:259:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:61:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "840:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "871:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "845:25:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "845:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "833:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:45:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "833:45:4"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "811:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "818:3:4",
														"type": ""
													}
												],
												"src": "752:132:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:728:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1118:88:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1200:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1132:67:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:74:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1122:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1215:113:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1316:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1321:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1222:93:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:106:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1215:3:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1337:91:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1422:5:4"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1352:69:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1352:76:4"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "1341:7:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1437:21:4",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "1451:7:4"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1441:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1527:284:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1541:34:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1568:6:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1562:5:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1562:13:4"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "1545:13:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1588:110:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "1679:13:4"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1694:3:4"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Part_$11_memory_ptr_to_t_struct$_Part_$11_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "1595:83:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1595:103:4"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1588:3:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1711:90:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1794:6:4"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "1721:72:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1721:80:4"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1489:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1492:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1486:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1500:18:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1502:14:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1511:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1514:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1507:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1507:9:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1502:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1471:14:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1473:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1482:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "1477:1:4",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1467:344:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1820:10:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1827:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1820:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1087:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1094:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1103:3:4",
														"type": ""
													}
												],
												"src": "944:892:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1988:409:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1998:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2014:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2019:4:4",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2010:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2010:14:4"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "2002:4:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2034:183:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2072:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2102:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2109:4:4",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2098:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2098:16:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2092:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2092:23:4"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2076:12:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2178:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2196:3:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2201:4:4",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2192:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2192:14:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_payable_to_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "2128:49:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2128:79:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2128:79:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2227:163:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2263:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2293:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2300:4:4",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:16:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2283:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2283:23:4"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2267:12:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2351:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2369:3:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2374:4:4",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2365:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2365:14:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint96_to_t_uint96",
																			"nodeType": "YulIdentifier",
																			"src": "2319:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2319:61:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2319:61:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Part_$11_memory_ptr_to_t_struct$_Part_$11_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1975:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1982:3:4",
														"type": ""
													}
												],
												"src": "1892:505:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2456:52:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2473:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2495:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint96",
																			"nodeType": "YulIdentifier",
																			"src": "2478:16:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2478:23:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2466:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2466:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2466:36:4"
														}
													]
												},
												"name": "abi_encode_t_uint96_to_t_uint96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2444:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2451:3:4",
														"type": ""
													}
												],
												"src": "2403:105:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2702:265:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2712:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2724:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2735:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2720:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2712:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2759:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2770:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2755:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2755:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2778:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2784:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2774:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2774:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2748:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2748:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2748:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2804:156:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2946:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2955:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2812:133:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2812:148:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2804:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2674:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2686:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2697:4:4",
														"type": ""
													}
												],
												"src": "2514:453:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3013:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3023:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3039:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3033:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3033:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3023:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3006:6:4",
														"type": ""
													}
												],
												"src": "2973:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3146:60:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3156:11:4",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "3164:3:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3156:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3177:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3189:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3194:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3185:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3185:14:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3177:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "3133:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3141:4:4",
														"type": ""
													}
												],
												"src": "3054:152:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3306:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3317:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3333:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3327:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3327:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3317:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3289:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3299:6:4",
														"type": ""
													}
												],
												"src": "3212:134:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3447:38:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3457:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3469:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3474:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3465:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3465:14:4"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "3457:4:4"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "3434:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "3442:4:4",
														"type": ""
													}
												],
												"src": "3352:133:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3622:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3639:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3644:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3632:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3632:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3632:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3660:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3679:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3684:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3675:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3675:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3660:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3594:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3599:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3610:11:4",
														"type": ""
													}
												],
												"src": "3491:204:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3754:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3764:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3793:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3775:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3775:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3764:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3736:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3746:7:4",
														"type": ""
													}
												],
												"src": "3701:104:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3856:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3866:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3881:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3888:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3877:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3877:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3866:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3848:7:4",
														"type": ""
													}
												],
												"src": "3811:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3988:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3998:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4009:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3998:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3970:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3980:7:4",
														"type": ""
													}
												],
												"src": "3943:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4070:65:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4080:49:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4095:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4102:26:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4091:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4091:38:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4080:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4052:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4062:7:4",
														"type": ""
													}
												],
												"src": "4026:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4230:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4247:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4250:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4240:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4240:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4141:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4353:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4373:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4363:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4363:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4363:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4264:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4430:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4487:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4496:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4499:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4489:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4489:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4489:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4453:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4460:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4460:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4450:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4450:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4443:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4443:43:4"
															},
															"nodeType": "YulIf",
															"src": "4440:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4423:5:4",
														"type": ""
													}
												],
												"src": "4387:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Part_$11_memory_ptr_to_t_struct$_Part_$11_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Part_$11_memory_ptr_to_t_struct$_Part_$11_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    // struct LibPart.Part[] -> struct LibPart.Part[]\n    function abi_encode_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Part_$11_memory_ptr_to_t_struct$_Part_$11_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct LibPart.Part -> struct LibPart.Part\n    function abi_encode_t_struct$_Part_$11_memory_ptr_to_t_struct$_Part_$11_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // account\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // value\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint96_to_t_uint96(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_t_uint96_to_t_uint96(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cad96cca14610030575b600080fd5b61004a60048036038101906100459190610176565b610060565b6040516100579190610266565b60405180910390f35b6060600080838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610156578382906000526020600020016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff168152505081526020019060010190610094565b505050509050919050565b6000813590506101708161031a565b92915050565b60006020828403121561018c5761018b610315565b5b600061019a84828501610161565b91505092915050565b60006101af8383610228565b60408301905092915050565b6101c4816102c1565b82525050565b60006101d582610298565b6101df81856102b0565b93506101ea83610288565b8060005b8381101561021b57815161020288826101a3565b975061020d836102a3565b9250506001810190506101ee565b5085935050505092915050565b60408201600082015161023e60008501826101bb565b5060208201516102516020850182610257565b50505050565b610260816102fd565b82525050565b6000602082019050818103600083015261028081846101ca565b905092915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b60006102cc826102d3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006bffffffffffffffffffffffff82169050919050565b600080fd5b610323816102f3565b811461032e57600080fd5b5056fea264697066735822122085fc0160b192c8445494f80490ace44faa7de9f4e834405eed7a229fb912d04664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCAD96CCA EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x176 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x156 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x94 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x170 DUP2 PUSH2 0x31A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C JUMPI PUSH2 0x18B PUSH2 0x315 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A DUP5 DUP3 DUP6 ADD PUSH2 0x161 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF DUP4 DUP4 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C4 DUP2 PUSH2 0x2C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5 DUP3 PUSH2 0x298 JUMP JUMPDEST PUSH2 0x1DF DUP2 DUP6 PUSH2 0x2B0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EA DUP4 PUSH2 0x288 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21B JUMPI DUP2 MLOAD PUSH2 0x202 DUP9 DUP3 PUSH2 0x1A3 JUMP JUMPDEST SWAP8 POP PUSH2 0x20D DUP4 PUSH2 0x2A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1EE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x23E PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1BB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x251 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x257 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x260 DUP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x280 DUP2 DUP5 PUSH2 0x1CA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC DUP3 PUSH2 0x2D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x323 DUP2 PUSH2 0x2F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xFC ADD PUSH1 0xB1 SWAP3 0xC8 DIFFICULTY SLOAD SWAP5 0xF8 DIV SWAP1 0xAC 0xE4 0x4F 0xAA PUSH30 0xE9F4E834405EED7A229FB912D04664736F6C634300080700330000000000 ",
							"sourceMap": "129:357:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;197:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;272:21;313:9;:13;323:2;313:13;;;;;;;;;;;306:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;197:137;;;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:259::-;596:10;617:86;699:3;691:6;617:86;:::i;:::-;735:4;730:3;726:14;712:28;;487:259;;;;:::o;752:132::-;845:32;871:5;845:32;:::i;:::-;840:3;833:45;752:132;;:::o;944:892::-;1103:3;1132:74;1200:5;1132:74;:::i;:::-;1222:106;1321:6;1316:3;1222:106;:::i;:::-;1215:113;;1352:76;1422:5;1352:76;:::i;:::-;1451:7;1482:1;1467:344;1492:6;1489:1;1486:13;1467:344;;;1568:6;1562:13;1595:103;1694:3;1679:13;1595:103;:::i;:::-;1588:110;;1721:80;1794:6;1721:80;:::i;:::-;1711:90;;1527:284;1514:1;1511;1507:9;1502:14;;1467:344;;;1471:14;1827:3;1820:10;;1108:728;;;944:892;;;;:::o;1892:505::-;2019:4;2014:3;2010:14;2109:4;2102:5;2098:16;2092:23;2128:79;2201:4;2196:3;2192:14;2178:12;2128:79;:::i;:::-;2034:183;2300:4;2293:5;2289:16;2283:23;2319:61;2374:4;2369:3;2365:14;2351:12;2319:61;:::i;:::-;2227:163;1988:409;1892:505;;:::o;2403:105::-;2478:23;2495:5;2478:23;:::i;:::-;2473:3;2466:36;2403:105;;:::o;2514:453::-;2697:4;2735:2;2724:9;2720:18;2712:26;;2784:9;2778:4;2774:20;2770:1;2759:9;2755:17;2748:47;2812:148;2955:4;2946:6;2812:148;:::i;:::-;2804:156;;2514:453;;;;:::o;3054:152::-;3141:4;3164:3;3156:11;;3194:4;3189:3;3185:14;3177:22;;3054:152;;;:::o;3212:134::-;3299:6;3333:5;3327:12;3317:22;;3212:134;;;:::o;3352:133::-;3442:4;3474;3469:3;3465:14;3457:22;;3352:133;;;:::o;3491:204::-;3610:11;3644:6;3639:3;3632:19;3684:4;3679:3;3675:14;3660:29;;3491:204;;;;:::o;3701:104::-;3746:7;3775:24;3793:5;3775:24;:::i;:::-;3764:35;;3701:104;;;:::o;3811:126::-;3848:7;3888:42;3881:5;3877:54;3866:65;;3811:126;;;:::o;3943:77::-;3980:7;4009:5;3998:16;;3943:77;;;:::o;4026:109::-;4062:7;4102:26;4095:5;4091:38;4080:49;;4026:109;;;:::o;4264:117::-;4373:1;4370;4363:12;4387:122;4460:24;4478:5;4460:24;:::i;:::-;4453:5;4450:35;4440:63;;4499:1;4496;4489:12;4440:63;4387:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "174200",
								"executionCost": "220",
								"totalCost": "174420"
							},
							"external": {
								"getRaribleV2Royalties(uint256)": "infinite"
							},
							"internal": {
								"_onRoyaltiesSet(uint256,struct LibPart.Part memory[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 486,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 129,
									"end": 486,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 129,
									"end": 486,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 486,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 486,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 129,
									"end": 486,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 129,
									"end": 486,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 486,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 129,
									"end": 486,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 486,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 129,
									"end": 486,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 129,
									"end": 486,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 486,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 129,
									"end": 486,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 129,
									"end": 486,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 486,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 129,
									"end": 486,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 486,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 486,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 129,
									"end": 486,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 486,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122085fc0160b192c8445494f80490ace44faa7de9f4e834405eed7a229fb912d04664736f6c63430008070033",
									".code": [
										{
											"begin": 129,
											"end": 486,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 486,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 486,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 129,
											"end": 486,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 129,
											"end": 486,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 129,
											"end": 486,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 129,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 129,
											"end": 486,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 129,
											"end": 486,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 486,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 129,
											"end": 486,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 129,
											"end": 486,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 129,
											"end": 486,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 129,
											"end": 486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 129,
											"end": 486,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 129,
											"end": 486,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 129,
											"end": 486,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 129,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 486,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 129,
											"end": 486,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 486,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 129,
											"end": 486,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 129,
											"end": 486,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 129,
											"end": 486,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 129,
											"end": 486,
											"name": "PUSH",
											"source": 3,
											"value": "CAD96CCA"
										},
										{
											"begin": 129,
											"end": 486,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 129,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 129,
											"end": 486,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 129,
											"end": 486,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 486,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 129,
											"end": 486,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 486,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 129,
											"end": 486,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 197,
											"end": 334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 197,
											"end": 334,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 197,
											"end": 334,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 197,
											"end": 334,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 197,
											"end": 334,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 197,
											"end": 334,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 197,
											"end": 334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 197,
											"end": 334,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 197,
											"end": 334,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 197,
											"end": 334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 334,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 197,
											"end": 334,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 197,
											"end": 334,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 197,
											"end": 334,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 197,
											"end": 334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 334,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 197,
											"end": 334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 272,
											"end": 293,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 313,
											"end": 322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 326,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 323,
											"end": 325,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 313,
											"end": 326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 313,
											"end": 326,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 313,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 326,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 313,
											"end": 326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 313,
											"end": 326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 313,
											"end": 326,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 313,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 326,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 313,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 326,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 306,
											"end": 326,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 326,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 197,
											"end": 334,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 746,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 487,
											"end": 746,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 596,
											"end": 606,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 699,
											"end": 702,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 691,
											"end": 697,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 617,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 617,
											"end": 703,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 617,
											"end": 703,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 617,
											"end": 703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 735,
											"end": 739,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 733,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 726,
											"end": 740,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 712,
											"end": 740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 487,
											"end": 746,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 487,
											"end": 746,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 487,
											"end": 746,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 487,
											"end": 746,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 487,
											"end": 746,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 752,
											"end": 884,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 752,
											"end": 884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 845,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 871,
											"end": 876,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 845,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 845,
											"end": 877,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 845,
											"end": 877,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 845,
											"end": 877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 840,
											"end": 843,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 833,
											"end": 878,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 752,
											"end": 884,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 752,
											"end": 884,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 752,
											"end": 884,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 944,
											"end": 1836,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 944,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1103,
											"end": 1106,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1200,
											"end": 1205,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1132,
											"end": 1206,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1132,
											"end": 1206,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1132,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1319,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1222,
											"end": 1328,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1222,
											"end": 1328,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1222,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1215,
											"end": 1328,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1215,
											"end": 1328,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1352,
											"end": 1428,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1352,
											"end": 1428,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1352,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1467,
											"end": 1811,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1492,
											"end": 1498,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1489,
											"end": 1490,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1486,
											"end": 1499,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1811,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1467,
											"end": 1811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1574,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1575,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1694,
											"end": 1697,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 1692,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1595,
											"end": 1698,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1698,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1595,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1698,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1794,
											"end": 1800,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1721,
											"end": 1801,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1721,
											"end": 1801,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1721,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1801,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1801,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1515,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1511,
											"end": 1512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1507,
											"end": 1516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1502,
											"end": 1516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1502,
											"end": 1516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1811,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1811,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1467,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 1485,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 1830,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1820,
											"end": 1830,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1820,
											"end": 1830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1836,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1836,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1836,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1892,
											"end": 2397,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1892,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2017,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2010,
											"end": 2024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2109,
											"end": 2113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2107,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2115,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2201,
											"end": 2205,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2199,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2192,
											"end": 2206,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2190,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2128,
											"end": 2207,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2128,
											"end": 2207,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2128,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2217,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2300,
											"end": 2304,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2298,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2289,
											"end": 2305,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2283,
											"end": 2306,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2374,
											"end": 2378,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2372,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2379,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2319,
											"end": 2380,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2319,
											"end": 2380,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2319,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2227,
											"end": 2390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1988,
											"end": 2397,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1892,
											"end": 2397,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1892,
											"end": 2397,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1892,
											"end": 2397,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2403,
											"end": 2508,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2403,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2495,
											"end": 2500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2476,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2502,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2508,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2508,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2508,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2514,
											"end": 2967,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2514,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2697,
											"end": 2701,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2735,
											"end": 2737,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2724,
											"end": 2733,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2738,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2712,
											"end": 2738,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2712,
											"end": 2738,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2784,
											"end": 2793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2782,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2794,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 2771,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2768,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2772,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2748,
											"end": 2795,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2812,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2955,
											"end": 2959,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2952,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2812,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2812,
											"end": 2960,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2812,
											"end": 2960,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2812,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2960,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2967,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2967,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2967,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3054,
											"end": 3206,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3054,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3145,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3167,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3167,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3167,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3194,
											"end": 3198,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3189,
											"end": 3192,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3199,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3177,
											"end": 3199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3177,
											"end": 3199,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3206,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3206,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3206,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3212,
											"end": 3346,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3212,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3338,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3327,
											"end": 3339,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3339,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3339,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3212,
											"end": 3346,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3212,
											"end": 3346,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3212,
											"end": 3346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3212,
											"end": 3346,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3352,
											"end": 3485,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3352,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3474,
											"end": 3478,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3469,
											"end": 3472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3479,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3457,
											"end": 3479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3457,
											"end": 3479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3485,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3485,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3485,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3485,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3491,
											"end": 3695,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3491,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3621,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3644,
											"end": 3650,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3639,
											"end": 3642,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3632,
											"end": 3651,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3688,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3679,
											"end": 3682,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3675,
											"end": 3689,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3660,
											"end": 3689,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3660,
											"end": 3689,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3491,
											"end": 3695,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3491,
											"end": 3695,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3491,
											"end": 3695,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3491,
											"end": 3695,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3491,
											"end": 3695,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3701,
											"end": 3805,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3701,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3746,
											"end": 3753,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3775,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3793,
											"end": 3798,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3775,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3775,
											"end": 3799,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3775,
											"end": 3799,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3775,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3764,
											"end": 3799,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3764,
											"end": 3799,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3701,
											"end": 3805,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3701,
											"end": 3805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3701,
											"end": 3805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3701,
											"end": 3805,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3811,
											"end": 3937,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3811,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3848,
											"end": 3855,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3930,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3881,
											"end": 3886,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3931,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3866,
											"end": 3931,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3866,
											"end": 3931,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3937,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3937,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3943,
											"end": 4020,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3943,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3980,
											"end": 3987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4009,
											"end": 4014,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4014,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3943,
											"end": 4020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3943,
											"end": 4020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3943,
											"end": 4020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3943,
											"end": 4020,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4026,
											"end": 4135,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4026,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4062,
											"end": 4069,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4128,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4095,
											"end": 4100,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4091,
											"end": 4129,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4080,
											"end": 4129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4080,
											"end": 4129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4026,
											"end": 4135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4026,
											"end": 4135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4026,
											"end": 4135,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4026,
											"end": 4135,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4264,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4264,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4373,
											"end": 4374,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4370,
											"end": 4371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4387,
											"end": 4509,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 4387,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4478,
											"end": 4483,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4460,
											"end": 4484,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4460,
											"end": 4484,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4460,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4453,
											"end": 4458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4450,
											"end": 4485,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4440,
											"end": 4503,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4499,
											"end": 4500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4496,
											"end": 4497,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4489,
											"end": 4501,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4503,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4440,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4387,
											"end": 4509,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4387,
											"end": 4509,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getRaribleV2Royalties(uint256)": "cad96cca"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"value\",\"type\":\"uint96\"}],\"indexed\":false,\"internalType\":\"struct LibPart.Part[]\",\"name\":\"royalties\",\"type\":\"tuple[]\"}],\"name\":\"RoyaltiesSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getRaribleV2Royalties\",\"outputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"value\",\"type\":\"uint96\"}],\"internalType\":\"struct LibPart.Part[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"raribles/royalties/contracts/impl/RoyaltiesV2Impl.sol\":\"RoyaltiesV2Impl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"raribles/royalties/contracts/LibPart.sol\":{\"keccak256\":\"0xdfa649df056dcb60a976964e1f4f8066894c804762554c03bd06536f9d412be1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e83187922289282aa565bc20d7be9e7614cc15c41848fe45704916f84e449e53\",\"dweb:/ipfs/QmPBGfCBGJFPSUeQBCSY4FJaE6DFXCQNVXEbLmcuXDvJwQ\"]},\"raribles/royalties/contracts/RoyaltiesV2.sol\":{\"keccak256\":\"0xd284dc69f1894552bbc220691054c7d7d867062b54a62404821c9150354fea14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74ee84bdfa6a37c384626fd2d05ab0bfa359eca7c5b1f18287ec016544cad456\",\"dweb:/ipfs/QmQJzSor68pLzEBPQuJdLvC5CZPekxejvHWcY4pioKtwjH\"]},\"raribles/royalties/contracts/impl/AbstractRoyalties.sol\":{\"keccak256\":\"0x51eed74baa5ecd7e7b65ea6bc229053846fd95c32edb14c721618212dad56a71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d542310f3d474f1b35bb74765f127f3958534c22dc062cd29571daa357c35a7\",\"dweb:/ipfs/QmWDG68nLBraapQZMABQMvwvL8rQ8xDmfDgKUX4gXaRuAZ\"]},\"raribles/royalties/contracts/impl/RoyaltiesV2Impl.sol\":{\"keccak256\":\"0xe03f64bc4daec1cb4583dd9131cbb35467373e44b02a31ba71acccf66a9f999d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf7c7452bf387597d1bb9149ae4bab9bce1fa6f89d52948b9776d6dacc6266c0\",\"dweb:/ipfs/QmfCSswtrSaCvKq6rTmSkvcgpvPsLELbtXZ8NLAxG8t5RC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 62,
								"contract": "raribles/royalties/contracts/impl/RoyaltiesV2Impl.sol:RoyaltiesV2Impl",
								"label": "royalties",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_array(t_struct(Part)11_storage)dyn_storage)"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Part)11_storage)dyn_storage": {
								"base": "t_struct(Part)11_storage",
								"encoding": "dynamic_array",
								"label": "struct LibPart.Part[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_uint256,t_array(t_struct(Part)11_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct LibPart.Part[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Part)11_storage)dyn_storage"
							},
							"t_struct(Part)11_storage": {
								"encoding": "inplace",
								"label": "struct LibPart.Part",
								"members": [
									{
										"astId": 8,
										"contract": "raribles/royalties/contracts/impl/RoyaltiesV2Impl.sol:RoyaltiesV2Impl",
										"label": "account",
										"offset": 0,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 10,
										"contract": "raribles/royalties/contracts/impl/RoyaltiesV2Impl.sol:RoyaltiesV2Impl",
										"label": "value",
										"offset": 20,
										"slot": "0",
										"type": "t_uint96"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"raribles/royalties/contracts/LibPart.sol": {
				"ast": {
					"absolutePath": "raribles/royalties/contracts/LibPart.sol",
					"exportedSymbols": {
						"LibPart": [
							32
						]
					},
					"id": 33,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 32,
							"linearizedBaseContracts": [
								32
							],
							"name": "LibPart",
							"nameLocation": "70:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "64d4c819",
									"id": 6,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "109:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 32,
									"src": "85:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "85:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "506172742861646472657373206163636f756e742c75696e7439362076616c756529",
												"id": 4,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "131:36:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_397e04204c1e1a60ee8724b71f8244e10ab5f2e9009854d80f602bda21b59ebb",
													"typeString": "literal_string \"Part(address account,uint96 value)\""
												},
												"value": "Part(address account,uint96 value)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_397e04204c1e1a60ee8724b71f8244e10ab5f2e9009854d80f602bda21b59ebb",
													"typeString": "literal_string \"Part(address account,uint96 value)\""
												}
											],
											"id": 3,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "121:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 5,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "121:47:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "LibPart.Part",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 8,
											"mutability": "mutable",
											"name": "account",
											"nameLocation": "216:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "200:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 7,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "200:15:0",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "241:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "234:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 9,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "234:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Part",
									"nameLocation": "184:4:0",
									"nodeType": "StructDefinition",
									"scope": 32,
									"src": "177:77:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "326:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 22,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "365:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 23,
																		"name": "part",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 14,
																		"src": "376:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Part_$11_memory_ptr",
																			"typeString": "struct LibPart.Part memory"
																		}
																	},
																	"id": 24,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "account",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 8,
																	"src": "376:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"expression": {
																		"id": 25,
																		"name": "part",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 14,
																		"src": "390:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Part_$11_memory_ptr",
																			"typeString": "struct LibPart.Part memory"
																		}
																	},
																	"id": 26,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 10,
																	"src": "390:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																],
																"expression": {
																	"id": 20,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "354:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "354:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "354:47:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 19,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "344:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "344:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 18,
												"id": 29,
												"nodeType": "Return",
												"src": "337:65:0"
											}
										]
									},
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "271:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "part",
												"nameLocation": "288:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "276:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Part_$11_memory_ptr",
													"typeString": "struct LibPart.Part"
												},
												"typeName": {
													"id": 13,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 12,
														"name": "Part",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 11,
														"src": "276:4:0"
													},
													"referencedDeclaration": 11,
													"src": "276:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Part_$11_storage_ptr",
														"typeString": "struct LibPart.Part"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:18:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "317:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 16,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "317:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "316:9:0"
									},
									"scope": 32,
									"src": "262:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 33,
							"src": "62:351:0",
							"usedErrors": []
						}
					],
					"src": "35:378:0"
				},
				"id": 0
			},
			"raribles/royalties/contracts/RoyaltiesV2.sol": {
				"ast": {
					"absolutePath": "raribles/royalties/contracts/RoyaltiesV2.sol",
					"exportedSymbols": {
						"LibPart": [
							32
						],
						"RoyaltiesV2": [
							53
						]
					},
					"id": 54,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 34,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:1"
						},
						{
							"absolutePath": "raribles/royalties/contracts/LibPart.sol",
							"file": "./LibPart.sol",
							"id": 35,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 54,
							"sourceUnit": 33,
							"src": "64:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 53,
							"linearizedBaseContracts": [
								53
							],
							"name": "RoyaltiesV2",
							"nameLocation": "101:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 43,
									"name": "RoyaltiesSet",
									"nameLocation": "126:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "147:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "139:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": false,
												"mutability": "mutable",
												"name": "royalties",
												"nameLocation": "171:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "156:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct LibPart.Part[]"
												},
												"typeName": {
													"baseType": {
														"id": 39,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 38,
															"name": "LibPart.Part",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 11,
															"src": "156:12:1"
														},
														"referencedDeclaration": 11,
														"src": "156:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Part_$11_storage_ptr",
															"typeString": "struct LibPart.Part"
														}
													},
													"id": 40,
													"nodeType": "ArrayTypeName",
													"src": "156:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Part_$11_storage_$dyn_storage_ptr",
														"typeString": "struct LibPart.Part[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "138:43:1"
									},
									"src": "120:62:1"
								},
								{
									"functionSelector": "cad96cca",
									"id": 52,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRaribleV2Royalties",
									"nameLocation": "199:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "221:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "220:12:1"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "256:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct LibPart.Part[]"
												},
												"typeName": {
													"baseType": {
														"id": 48,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 47,
															"name": "LibPart.Part",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 11,
															"src": "256:12:1"
														},
														"referencedDeclaration": 11,
														"src": "256:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Part_$11_storage_ptr",
															"typeString": "struct LibPart.Part"
														}
													},
													"id": 49,
													"nodeType": "ArrayTypeName",
													"src": "256:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Part_$11_storage_$dyn_storage_ptr",
														"typeString": "struct LibPart.Part[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "255:23:1"
									},
									"scope": 53,
									"src": "190:89:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 54,
							"src": "91:191:1",
							"usedErrors": []
						}
					],
					"src": "35:247:1"
				},
				"id": 1
			},
			"raribles/royalties/contracts/impl/AbstractRoyalties.sol": {
				"ast": {
					"absolutePath": "raribles/royalties/contracts/impl/AbstractRoyalties.sol",
					"exportedSymbols": {
						"AbstractRoyalties": [
							206
						],
						"LibPart": [
							32
						]
					},
					"id": 207,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 55,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:2"
						},
						{
							"absolutePath": "raribles/royalties/contracts/LibPart.sol",
							"file": "../LibPart.sol",
							"id": 56,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 207,
							"sourceUnit": 33,
							"src": "62:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 206,
							"linearizedBaseContracts": [
								206
							],
							"name": "AbstractRoyalties",
							"nameLocation": "108:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 62,
									"mutability": "mutable",
									"name": "royalties",
									"nameLocation": "178:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 206,
									"src": "133:54:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Part_$11_storage_$dyn_storage_$",
										"typeString": "mapping(uint256 => struct LibPart.Part[])"
									},
									"typeName": {
										"id": 61,
										"keyType": {
											"id": 57,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "142:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "133:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Part_$11_storage_$dyn_storage_$",
											"typeString": "mapping(uint256 => struct LibPart.Part[])"
										},
										"valueType": {
											"baseType": {
												"id": 59,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 58,
													"name": "LibPart.Part",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 11,
													"src": "153:12:2"
												},
												"referencedDeclaration": 11,
												"src": "153:12:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Part_$11_storage_ptr",
													"typeString": "struct LibPart.Part"
												}
											},
											"id": 60,
											"nodeType": "ArrayTypeName",
											"src": "153:14:2",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Part_$11_storage_$dyn_storage_ptr",
												"typeString": "struct LibPart.Part[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "275:497:2",
										"statements": [
											{
												"assignments": [
													72
												],
												"declarations": [
													{
														"constant": false,
														"id": 72,
														"mutability": "mutable",
														"name": "totalValue",
														"nameLocation": "294:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 138,
														"src": "286:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 71,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "286:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 73,
												"nodeType": "VariableDeclarationStatement",
												"src": "286:18:2"
											},
											{
												"body": {
													"id": 124,
													"nodeType": "Block",
													"src": "360:284:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 86,
																					"name": "_royalties",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 68,
																					"src": "383:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct LibPart.Part memory[] memory"
																					}
																				},
																				"id": 88,
																				"indexExpression": {
																					"id": 87,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 75,
																					"src": "394:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "383:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Part_$11_memory_ptr",
																					"typeString": "struct LibPart.Part memory"
																				}
																			},
																			"id": 89,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "account",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 8,
																			"src": "383:21:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "307830",
																					"id": 92,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "416:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0x0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 91,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "408:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 90,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "408:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 93,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "408:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "383:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "526563697069656e742073686f756c642062652070726573656e74",
																		"id": 95,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "422:29:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ee50f6df2181dd19e502443265ec469bb75e8a65bb811a800aad148381cf8508",
																			"typeString": "literal_string \"Recipient should be present\""
																		},
																		"value": "Recipient should be present"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ee50f6df2181dd19e502443265ec469bb75e8a65bb811a800aad148381cf8508",
																			"typeString": "literal_string \"Recipient should be present\""
																		}
																	],
																	"id": 85,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "375:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "375:77:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 97,
															"nodeType": "ExpressionStatement",
															"src": "375:77:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		"id": 104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 99,
																					"name": "_royalties",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 68,
																					"src": "475:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct LibPart.Part memory[] memory"
																					}
																				},
																				"id": 101,
																				"indexExpression": {
																					"id": 100,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 75,
																					"src": "486:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "475:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Part_$11_memory_ptr",
																					"typeString": "struct LibPart.Part memory"
																				}
																			},
																			"id": 102,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 10,
																			"src": "475:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "498:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "475:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "526f79616c74792076616c75652073686f756c6420626520706f736974697665",
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "501:34:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_593311831d740e3a682cd1941decbdb819cd1a530afb770ecfcfb0c7a8b3d52a",
																			"typeString": "literal_string \"Royalty value should be positive\""
																		},
																		"value": "Royalty value should be positive"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_593311831d740e3a682cd1941decbdb819cd1a530afb770ecfcfb0c7a8b3d52a",
																			"typeString": "literal_string \"Royalty value should be positive\""
																		}
																	],
																	"id": 98,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "467:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "467:69:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 107,
															"nodeType": "ExpressionStatement",
															"src": "467:69:2"
														},
														{
															"expression": {
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 108,
																	"name": "totalValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "551:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 109,
																			"name": "_royalties",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 68,
																			"src": "565:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct LibPart.Part memory[] memory"
																			}
																		},
																		"id": 111,
																		"indexExpression": {
																			"id": 110,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 75,
																			"src": "576:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "565:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Part_$11_memory_ptr",
																			"typeString": "struct LibPart.Part memory"
																		}
																	},
																	"id": 112,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 10,
																	"src": "565:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "551:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 114,
															"nodeType": "ExpressionStatement",
															"src": "551:33:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 119,
																			"name": "_royalties",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 68,
																			"src": "618:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct LibPart.Part memory[] memory"
																			}
																		},
																		"id": 121,
																		"indexExpression": {
																			"id": 120,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 75,
																			"src": "629:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "618:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Part_$11_memory_ptr",
																			"typeString": "struct LibPart.Part memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Part_$11_memory_ptr",
																			"typeString": "struct LibPart.Part memory"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 115,
																			"name": "royalties",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 62,
																			"src": "599:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Part_$11_storage_$dyn_storage_$",
																				"typeString": "mapping(uint256 => struct LibPart.Part storage ref[] storage ref)"
																			}
																		},
																		"id": 117,
																		"indexExpression": {
																			"id": 116,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 64,
																			"src": "609:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "599:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Part_$11_storage_$dyn_storage",
																			"typeString": "struct LibPart.Part storage ref[] storage ref"
																		}
																	},
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "599:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Part_$11_storage_$dyn_storage_ptr_$_t_struct$_Part_$11_storage_$returns$__$bound_to$_t_array$_t_struct$_Part_$11_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct LibPart.Part storage ref[] storage pointer,struct LibPart.Part storage ref)"
																	}
																},
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "599:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 123,
															"nodeType": "ExpressionStatement",
															"src": "599:33:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 78,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "332:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 79,
															"name": "_royalties",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "336:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct LibPart.Part memory[] memory"
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "336:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "332:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 125,
												"initializationExpression": {
													"assignments": [
														75
													],
													"declarations": [
														{
															"constant": false,
															"id": 75,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "325:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 125,
															"src": "320:6:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 74,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "320:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 77,
													"initialValue": {
														"hexValue": "30",
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "329:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "320:10:2"
												},
												"loopExpression": {
													"expression": {
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "355:3:2",
														"subExpression": {
															"id": 82,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "355:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 84,
													"nodeType": "ExpressionStatement",
													"src": "355:3:2"
												},
												"nodeType": "ForStatement",
												"src": "315:329:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 127,
																"name": "totalValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "662:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "675:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "662:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f79616c747920746f74616c2076616c75652073686f756c64206265203c203130303030",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "682:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d55991faf2c75cbf95f459b8791f6e197e3c12d90cb83c654337a549aaf86073",
																"typeString": "literal_string \"Royalty total value should be < 10000\""
															},
															"value": "Royalty total value should be < 10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d55991faf2c75cbf95f459b8791f6e197e3c12d90cb83c654337a549aaf86073",
																"typeString": "literal_string \"Royalty total value should be < 10000\""
															}
														],
														"id": 126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "654:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "654:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "654:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 134,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "749:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 135,
															"name": "_royalties",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "753:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct LibPart.Part memory[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct LibPart.Part memory[] memory"
															}
														],
														"id": 133,
														"name": "_onRoyaltiesSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "733:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256,struct LibPart.Part memory[] memory)"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "733:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "733:31:2"
											}
										]
									},
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_saveRoyalties",
									"nameLocation": "205:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "228:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "220:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "220:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "_royalties",
												"nameLocation": "254:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "232:32:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct LibPart.Part[]"
												},
												"typeName": {
													"baseType": {
														"id": 66,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 65,
															"name": "LibPart.Part",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 11,
															"src": "232:12:2"
														},
														"referencedDeclaration": 11,
														"src": "232:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Part_$11_storage_ptr",
															"typeString": "struct LibPart.Part"
														}
													},
													"id": 67,
													"nodeType": "ArrayTypeName",
													"src": "232:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Part_$11_storage_$dyn_storage_ptr",
														"typeString": "struct LibPart.Part[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "219:46:2"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "275:0:2"
									},
									"scope": 206,
									"src": "196:576:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "854:256:2",
										"statements": [
											{
												"assignments": [
													149
												],
												"declarations": [
													{
														"constant": false,
														"id": 149,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "870:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 195,
														"src": "865:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 148,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "865:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 154,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 150,
															"name": "royalties",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "879:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Part_$11_storage_$dyn_storage_$",
																"typeString": "mapping(uint256 => struct LibPart.Part storage ref[] storage ref)"
															}
														},
														"id": 152,
														"indexExpression": {
															"id": 151,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "889:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "879:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Part_$11_storage_$dyn_storage",
															"typeString": "struct LibPart.Part storage ref[] storage ref"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "879:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "865:35:2"
											},
											{
												"body": {
													"id": 193,
													"nodeType": "Block",
													"src": "944:159:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 165,
																				"name": "royalties",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 62,
																				"src": "963:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Part_$11_storage_$dyn_storage_$",
																					"typeString": "mapping(uint256 => struct LibPart.Part storage ref[] storage ref)"
																				}
																			},
																			"id": 167,
																			"indexExpression": {
																				"id": 166,
																				"name": "_id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 141,
																				"src": "973:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "963:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Part_$11_storage_$dyn_storage",
																				"typeString": "struct LibPart.Part storage ref[] storage ref"
																			}
																		},
																		"id": 169,
																		"indexExpression": {
																			"id": 168,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 156,
																			"src": "978:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "963:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Part_$11_storage",
																			"typeString": "struct LibPart.Part storage ref"
																		}
																	},
																	"id": 170,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "account",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 8,
																	"src": "963:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 171,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "992:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "963:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 192,
															"nodeType": "IfStatement",
															"src": "959:133:2",
															"trueBody": {
																"id": 191,
																"nodeType": "Block",
																"src": "999:93:2",
																"statements": [
																	{
																		"expression": {
																			"id": 189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 173,
																							"name": "royalties",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 62,
																							"src": "1018:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Part_$11_storage_$dyn_storage_$",
																								"typeString": "mapping(uint256 => struct LibPart.Part storage ref[] storage ref)"
																							}
																						},
																						"id": 176,
																						"indexExpression": {
																							"id": 174,
																							"name": "_id",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 141,
																							"src": "1028:3:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1018:14:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Part_$11_storage_$dyn_storage",
																							"typeString": "struct LibPart.Part storage ref[] storage ref"
																						}
																					},
																					"id": 177,
																					"indexExpression": {
																						"id": 175,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 156,
																						"src": "1033:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1018:17:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Part_$11_storage",
																						"typeString": "struct LibPart.Part storage ref"
																					}
																				},
																				"id": 178,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "account",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 8,
																				"src": "1018:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 185,
																										"name": "_to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 145,
																										"src": "1070:3:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 184,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "1062:7:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint160_$",
																										"typeString": "type(uint160)"
																									},
																									"typeName": {
																										"id": 183,
																										"name": "uint160",
																										"nodeType": "ElementaryTypeName",
																										"src": "1062:7:2",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 186,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1062:12:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								}
																							],
																							"id": 182,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1054:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 181,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "1054:7:2",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 187,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1054:21:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 180,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1046:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_payable_$",
																						"typeString": "type(address payable)"
																					},
																					"typeName": {
																						"id": 179,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "1046:8:2",
																						"stateMutability": "payable",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1046:30:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"src": "1018:58:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 190,
																		"nodeType": "ExpressionStatement",
																		"src": "1018:58:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 159,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "927:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 160,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "931:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "927:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 194,
												"initializationExpression": {
													"assignments": [
														156
													],
													"declarations": [
														{
															"constant": false,
															"id": 156,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "920:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 194,
															"src": "915:6:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 155,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "915:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 158,
													"initialValue": {
														"hexValue": "30",
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "924:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "915:10:2"
												},
												"loopExpression": {
													"expression": {
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "939:3:2",
														"subExpression": {
															"id": 162,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "939:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 164,
													"nodeType": "ExpressionStatement",
													"src": "939:3:2"
												},
												"nodeType": "ForStatement",
												"src": "911:192:2"
											}
										]
									},
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateAccount",
									"nameLocation": "789:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "812:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "804:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "825:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "817:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "840:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "832:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "832:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:41:2"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:0:2"
									},
									"scope": 206,
									"src": "780:330:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"id": 205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_onRoyaltiesSet",
									"nameLocation": "1127:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1151:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1143:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "_royalties",
												"nameLocation": "1177:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1155:32:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct LibPart.Part[]"
												},
												"typeName": {
													"baseType": {
														"id": 200,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 199,
															"name": "LibPart.Part",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 11,
															"src": "1155:12:2"
														},
														"referencedDeclaration": 11,
														"src": "1155:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Part_$11_storage_ptr",
															"typeString": "struct LibPart.Part"
														}
													},
													"id": 201,
													"nodeType": "ArrayTypeName",
													"src": "1155:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Part_$11_storage_$dyn_storage_ptr",
														"typeString": "struct LibPart.Part[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1142:46:2"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1205:0:2"
									},
									"scope": 206,
									"src": "1118:88:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 207,
							"src": "90:1119:2",
							"usedErrors": []
						}
					],
					"src": "35:1174:2"
				},
				"id": 2
			},
			"raribles/royalties/contracts/impl/RoyaltiesV2Impl.sol": {
				"ast": {
					"absolutePath": "raribles/royalties/contracts/impl/RoyaltiesV2Impl.sol",
					"exportedSymbols": {
						"AbstractRoyalties": [
							206
						],
						"LibPart": [
							32
						],
						"RoyaltiesV2": [
							53
						],
						"RoyaltiesV2Impl": [
							246
						]
					},
					"id": 247,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 208,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"absolutePath": "raribles/royalties/contracts/impl/AbstractRoyalties.sol",
							"file": "./AbstractRoyalties.sol",
							"id": 209,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 247,
							"sourceUnit": 207,
							"src": "62:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "raribles/royalties/contracts/RoyaltiesV2.sol",
							"file": "../RoyaltiesV2.sol",
							"id": 210,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 247,
							"sourceUnit": 54,
							"src": "97:28:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 211,
										"name": "AbstractRoyalties",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 206,
										"src": "157:17:3"
									},
									"id": 212,
									"nodeType": "InheritanceSpecifier",
									"src": "157:17:3"
								},
								{
									"baseName": {
										"id": 213,
										"name": "RoyaltiesV2",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 53,
										"src": "176:11:3"
									},
									"id": 214,
									"nodeType": "InheritanceSpecifier",
									"src": "176:11:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 246,
							"linearizedBaseContracts": [
								246,
								53,
								206
							],
							"name": "RoyaltiesV2Impl",
							"nameLocation": "138:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										52
									],
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "295:39:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 224,
														"name": "royalties",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "313:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Part_$11_storage_$dyn_storage_$",
															"typeString": "mapping(uint256 => struct LibPart.Part storage ref[] storage ref)"
														}
													},
													"id": 226,
													"indexExpression": {
														"id": 225,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "323:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "313:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Part_$11_storage_$dyn_storage",
														"typeString": "struct LibPart.Part storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 223,
												"id": 227,
												"nodeType": "Return",
												"src": "306:20:3"
											}
										]
									},
									"functionSelector": "cad96cca",
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRaribleV2Royalties",
									"nameLocation": "206:21:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 218,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "240:8:3"
									},
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "236:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "228:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "227:12:3"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "272:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct LibPart.Part[]"
												},
												"typeName": {
													"baseType": {
														"id": 220,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 219,
															"name": "LibPart.Part",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 11,
															"src": "272:12:3"
														},
														"referencedDeclaration": 11,
														"src": "272:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Part_$11_storage_ptr",
															"typeString": "struct LibPart.Part"
														}
													},
													"id": 221,
													"nodeType": "ArrayTypeName",
													"src": "272:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Part_$11_storage_$dyn_storage_ptr",
														"typeString": "struct LibPart.Part[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "271:23:3"
									},
									"scope": 246,
									"src": "197:137:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										205
									],
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "431:52:3",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 240,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "460:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 241,
															"name": "_royalties",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "464:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct LibPart.Part memory[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct LibPart.Part memory[] memory"
															}
														],
														"id": 239,
														"name": "RoyaltiesSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "447:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256,struct LibPart.Part memory[] memory)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "447:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "EmitStatement",
												"src": "442:33:3"
											}
										]
									},
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_onRoyaltiesSet",
									"nameLocation": "351:15:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 237,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "413:8:3"
									},
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "375:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "367:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "367:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "_royalties",
												"nameLocation": "401:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "379:32:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Part_$11_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct LibPart.Part[]"
												},
												"typeName": {
													"baseType": {
														"id": 233,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 232,
															"name": "LibPart.Part",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 11,
															"src": "379:12:3"
														},
														"referencedDeclaration": 11,
														"src": "379:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Part_$11_storage_ptr",
															"typeString": "struct LibPart.Part"
														}
													},
													"id": 234,
													"nodeType": "ArrayTypeName",
													"src": "379:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Part_$11_storage_$dyn_storage_ptr",
														"typeString": "struct LibPart.Part[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:46:3"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "431:0:3"
									},
									"scope": 246,
									"src": "342:141:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 247,
							"src": "129:357:3",
							"usedErrors": []
						}
					],
					"src": "35:451:3"
				},
				"id": 3
			}
		}
	}
}